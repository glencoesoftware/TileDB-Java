steps:
  - download: current
    patterns: '**/*.tar.gz'

  - bash: |
      unset SYSTEM
      set +e

      mv ../libraries/* .

      mkdir -p ./build/install/lib
      mkdir ./build/install/lib64
      mkdir ./build/tiledb_jni/
      mkdir ./build/tiledb_jni/Release
      mkdir ./build/install/bin

      for arch in $(ls | grep .tar.gz)
      do
        tar -xf $arch
      done

      # OSX
      mv libtiledb.dylib ./build/install/lib
      mv libtiledbjni.dylib ./build/tiledb_jni

      # Linux
      cp libtiledb.so ./build/install/lib
      mv libtiledb.so ./build/install/lib64
      mv libtiledbjni.so ./build/tiledb_jni

      # Windows
      mv tbb.dll ./build/install/bin
      mv tiledb.dll ./build/install/bin
      mv tiledbjni.dll ./build/tiledb_jni/Release

      ./gradlew assemble

      cp build/libs/*.jar $BUILD_BINARIESDIRECTORY

    displayName: 'Building the Fat Jar'

  - bash: |
      set -e pipefail
      # Display log files if the build failed
      echo "Dumping log files for failed build"
      echo "----------------------------------"
      for f in $(find $BUILD_REPOSITORY_LOCALPATH -name *.log);
        do echo "------"
           echo $f
           echo "======"
           cat $f
        done;
    condition: failed() # only run this job if the build step failed
    displayName: "Print log files (failed build only)"

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: $(Build.BinariesDirectory)
      artifactName: final-jar
    condition: succeeded()

  - bash: |
      ./gradlew publish
    env:
      ARTIFACTORY_USERNAME: $(ARTIFACTORY_USERNAME)
      ARTIFACTORY_PASSWORD: $(ARTIFACTORY_PASSWORD)
    displayName: "Publish to Maven"
